@using Core.ViewModels.Movie
@model MovieDetailsModel;

@{
    ViewData["Title"] = @Model.Title;
    string test = string.Join(", ", Model.Genres);
}


<link rel="stylesheet" href="~/css/details.css" />

<div class="details-container">
    <div class="poster-wrapper">
        <img src=@Model.ImageUrl alt="Poster" />
    </div>
    <div class="info-wrapper">
        <p class="movie-headline text-standard">@Model.Title</p>
        <div class="movie-interaction">
            <a asp-action="Edit" asp-route-id=@Model.Id><span class="fa fa-edit text-standard"></span></a>
            <a asp-action="Delete" asp-route-id=@Model.Id><span class="fa fa-trash text-standard"></span></a>
        </div>
        @if (@Model.Rating > 0)
        {
                <p class="text-standard sub-info"><i class="fa fa-star"></i>  @Model.Rating.ToString("F1")/10 • @Math.Floor(Model.Duration.TotalHours) @ViewData["Hour"] @Model.Duration.Minutes @ViewData["Minutes"] • @Model.ReleaseYear</p>
        }
        else
        {
                <p class="text-standard sub-info"><i class="fa fa-star"></i>  @Math.Floor(Model.Duration.TotalHours) @ViewData["Hour"] @Model.Duration.Minutes @ViewData["Minutes"] • @Model.ReleaseYear</p>
        }
        <ul>
            @foreach (var g in Model.Genres)
            {
                    <li>
                        <form asp-action="All" asp-route-search=@g method="post">
                            <button class="genre-button text-standard" type="submit">@g</button>
                        </form>
                    </li>
            }
        </ul>
        <p class="text-standard info-line">@ViewData["ActorsPlaceholder"]: @Model.Actors</p>
        <p class="text-standard info-line">@ViewData["DirectorPlaceholder"]: @Model.Director</p>
        <p class="text-standard info-line">@ViewData["CountryPlaceholder"]: @Model.Country</p>
        <p class="text-standard info-line">@Model.Description</p>

    </div>
</div>

    <script src="~/js/rating.js" type="module"></script>
