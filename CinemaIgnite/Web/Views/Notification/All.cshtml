@using Core.ViewModels.Notification
@model IEnumerable<NotificationDetailsModel>

@{
    ViewData["Title"] = "All";
}

<script src="~/js/notifications.js" type="module"></script>

<h1>All</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div class="container">

    @foreach (var item in Model)
    {
        <div class="notification-div">
            @if (item.IsChecked)
            {
                <p class="notification-title">@item.Title</p>
            }
            else
            {
                <p class="notification-title" style="font-weight: bold">@item.Title</p>
            }
            <div class="notification-text" hidden>
                @Html.DisplayFor(modelItem => item.Text)
                @Html.DisplayFor(modelItem => item.Date)
                <p id="user-id" hidden>@item.Id</p>
                <button class="delete-notification">Delete</button>
            </div>
        </div>


    }
</div>

<script type="text/javascript">
    let titleElements=document.querySelectorAll('.notification-title');
    let delElements=document.querySelectorAll('.delete-notification');

    titleElements.forEach(te=>te.addEventListener('click', (e)=>{
        let parent=te.parentElement;
        let userId=parent.querySelector('#user-id')
            .textContent;

        $.ajax({
        type: "POST",
        url: "@Url.Action("Read")",
        data: { id: userId}
        })
        .then((result)=>{
        });
    }))

    delElements.forEach(de=>de.addEventListener('click', ()=>{
        let divElement=de.parentElement.parentElement;
        let userId=divElement.querySelector('#user-id')
            .textContent;

        $.ajax({
        type: "POST",
        url: "@Url.Action("Delete")",
        data: { id: userId}
        })
        .then((result)=>{
            divElement.remove();
        });
    }))

</script>