@using Core.ViewModels.Movie
@model MovieDetailsModel;

@{
    ViewData["Title"] = Model.Title;
    string test = string.Join(", ", Model.Genres);
    string actors = ViewData["Actors"].ToString();
}


<link rel="stylesheet" href="~/css/details.css" />

<div class="details-container">
    <div class="poster-wrapper">
        <img src=@Model.ImageUrl alt="Poster" />
    </div>
    <div class="info-wrapper">
        <p class="movie-headline text-standard">@Model.Title</p>
        @if (@Model.Rating > 0)
        {
            <p class="text-standard sub-info"><i class="fa fa-star"></i>  @Model.Rating.ToString("F1")/10 • @Math.Floor(Model.Duration.TotalHours) ч. @Model.Duration.Minutes @ViewData["Min"] • @Model.ReleaseYear</p>
        }
        else
        {
            <p class="text-standard sub-info"><i class="fa fa-star"></i>  @Math.Floor(Model.Duration.TotalHours) ч. @Model.Duration.Minutes @ViewData["Min"] • @Model.ReleaseYear</p>
        }
        <ul>
            @foreach (var g in Model.Genres)
            {
                <li>
                    <form asp-action="All" asp-route-search=@g method="post">
                        <button class="genre-button text-standard" type="submit">@g</button>
                    </form>
                </li>
            }
        </ul>
        <p class="text-standard info-line">@ViewBag.Actors: @Model.Actors</p>
        <p class="text-standard info-line">@ViewData["Director"]: @Model.Director</p>
        <p class="text-standard info-line">@ViewData["Country"]: @Model.Country</p>
        <p class="text-standard info-line">@Model.Description</p>

    </div>
</div>
<partial name="_FavouriteMoviePartial">

    <partial name="_RateMoviePartial"></partial>
    <script src="~/js/rating.js" type="module"></script>
